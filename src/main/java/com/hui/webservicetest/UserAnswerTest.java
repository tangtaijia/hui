package com.hui.webservicetest;

import java.io.IOException;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpException;
import org.apache.commons.httpclient.NameValuePair;
import org.apache.commons.httpclient.methods.PostMethod;
import org.junit.Before;
import org.junit.Test;

public class UserAnswerTest{
	
	private HttpClient client;
	
	@Before
	public void setUp(){
		client = new HttpClient();
		client.getHostConfiguration().setHost("localhost",8080,"http");
	}
	
	@Test
	public void getAnswerTrendsTest() throws HttpException, IOException {
		System.out.println("invoke getAnswerTrendsTest http...");
		PostMethod post = new PostMethod("/hui/interface/getAnswerTrends.hui");
		NameValuePair huidaNo = new NameValuePair("huidaNo", "93607544");
		post.setRequestBody(new NameValuePair[]{huidaNo});
        client.executeMethod(post);
        byte[] responseBody = post.getResponseBody();
        System.out.println("message context is:"+ new String(responseBody));
	}
	
	
	@Test
	public void getAnswerListByQuestionIdTest() throws HttpException, IOException {
		System.out.println("invoke getAnswerListByQuestionIdTest http...");
		PostMethod post = new PostMethod("/hui/interface/getAnswerListByQuestionId.hui");
		NameValuePair value1 = new NameValuePair("questionId", "22");
		NameValuePair value2 = new NameValuePair("page", "1");
		post.setRequestBody(new NameValuePair[]{value1,value2});
        client.executeMethod(post);
        byte[] responseBody = post.getResponseBody();
        System.out.println("message context is:"+ new String(responseBody));
	}
	
	@Test
	public void setBestAnswerTest() throws HttpException, IOException {
		System.out.println("invoke setBestAnswerTest http...");
		PostMethod post = new PostMethod("/hui/interface/setBestAnswer.hui");
		NameValuePair value1 = new NameValuePair("questionId", "2");
		NameValuePair value2 = new NameValuePair("answerId", "1");
		post.setRequestBody(new NameValuePair[]{value1,value2});
        client.executeMethod(post);
        byte[] responseBody = post.getResponseBody();
        System.out.println("message context is:"+ new String(responseBody));
	}
	
	@Test
	public void getMyAnswersListTest() throws HttpException, IOException {
		System.out.println("invoke getMyAnswersListTest http...");
		PostMethod post = new PostMethod("/hui/interface/getMyAnswersList.hui");
		NameValuePair value1 = new NameValuePair("huidaNo", "93607544");
		NameValuePair value2 = new NameValuePair("page", "1");
		post.setRequestBody(new NameValuePair[]{value1,value2});
        client.executeMethod(post);
        byte[] responseBody = post.getResponseBody();
        System.out.println("message context is:"+ new String(responseBody));
	}
	
	@Test
	public void answerQuestionTest() throws HttpException, IOException {
		System.out.println("invoke answerQuestionTest http...");
		PostMethod post = new PostMethod("/hui/interface/answerQuestion.hui");
		NameValuePair value1 = new NameValuePair("huidaNo", "93607543");
		NameValuePair value2 = new NameValuePair("questionId", "3");
		NameValuePair value3 = new NameValuePair("answerDescription", "asdlakdlakjs");
		NameValuePair value4 = new NameValuePair("image", "");
		NameValuePair value5 = new NameValuePair("mode", "ihpone");
		NameValuePair value6 = new NameValuePair("os", "ios");
		post.setRequestBody(new NameValuePair[]{value1,value2,value3,value4,value5,value6});
        client.executeMethod(post);
        byte[] responseBody = post.getResponseBody();
        System.out.println("message context is:"+ new String(responseBody));
	}

}
